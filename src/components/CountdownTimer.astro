---
interface Props {
  targetDate: string
}

const { targetDate } = Astro.props
---

<div class="countdown-timer text-center">
  <div data-aos="fade-up" data-aos-delay="1500" data-aos-once="false" class="flex justify-center items-center gap-2">
    <div class="flex flex-col items-center">
      <span id="days" class="text-xl font-bold bg-[#fcedd8] border-2 border-hitam rounded-md p-2 min-w-[3rem]">00</span>
      <span class="font-bold text-sm mt-1">Hari</span>
    </div>
    <span class="-mt-6 text-xl font-bold">:</span>
    <div class="flex flex-col items-center">
      <span id="hours" class="text-xl font-bold bg-[#fcedd8] border-2 border-hitam rounded-md p-2 min-w-[3rem]">00</span>
      <span class="font-bold text-sm mt-1">Jam</span>
    </div>
    <span class="-mt-6 text-xl font-bold">:</span>
    <div class="flex flex-col items-center">
      <span id="minutes" class="text-xl font-bold bg-[#fcedd8] border-2 border-hitam rounded-md p-2 min-w-[3rem]">00</span>
      <span class="font-bold text-sm mt-1">Menit</span>
    </div>
  </div>
  <div data-aos="fade-up" data-aos-delay="1800" data-aos-once="false" class="mt-2 text-xs bg-[#fcedd8] p-2 border-2 border-hitam rounded-full">
    <svg class="size-4 inline-block mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
    </svg>
    <span>{new Date(targetDate).toLocaleString("id-ID", { dateStyle: "long", timeStyle: "short" })}</span>
  </div>
</div>

<script define:vars={{ targetDate }}>
  function updateCountdown() {
    const target = new Date(targetDate).getTime()
    const now = new Date().getTime()
    const timeLeft = target - now

    if (timeLeft > 0) {
      const days = Math.floor(timeLeft / (1000 * 60 * 60 * 24))
      const hours = Math.floor((timeLeft % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))
      const minutes = Math.floor((timeLeft % (1000 * 60 * 60)) / (1000 * 60))

      document.getElementById("days").textContent = days.toString().padStart(2, "0")
      document.getElementById("hours").textContent = hours.toString().padStart(2, "0")
      document.getElementById("minutes").textContent = minutes.toString().padStart(2, "0")

      requestAnimationFrame(updateCountdown)
    } else {
      document.querySelector(".countdown-timer").innerHTML = "<p class='text-lg font-bold'>Waktu telah habis!</p>"
    }
  }

  document.addEventListener("DOMContentLoaded", updateCountdown)
  document.addEventListener("astro:after-swap", updateCountdown)
</script>